using System;
using System.Collections.Generic;
using System.Text;

namespace Game
{
    class Bear: Enemy
    {
        public Bear(string name)
        {


            string[,] bearSchematic =
            {
                { " "," "," "," "," "," "," "," "," "," "," ",".","-","-","."," "," "," "," "," "," "," "," "," "," "," "," "," "," ",".","-","-","."," "," " },
                {" "," "," "," "," "," "," "," "," "," ",":"," ","(","\\"," ","\"","."," ","_",".",".",".",".",".",".","_"," ",".","\""," ","/",")"," ",":"," "},
                {" "," "," "," "," "," "," "," "," "," "," ","'","."," "," "," "," ","`"," "," "," "," "," "," "," "," ","`"," "," "," "," ",".","'"," "," "},
                { " "," "," "," "," "," "," "," "," "," "," "," ","/","'"," "," "," ","_"," "," "," "," "," "," "," "," ","_"," "," "," ","`","\\"," "," "," "},
                { " "," "," "," "," "," "," "," "," "," "," ","/"," "," "," "," "," ","0","}"," "," "," "," "," "," ","{","0"," "," "," "," "," ","\\"," "," "},
                { " "," "," "," "," "," "," "," "," "," ","|"," "," "," "," "," "," "," ","/"," "," "," "," "," "," ","\\"," "," "," "," "," "," "," ","|"," "},
                { " "," "," "," "," "," "," "," "," "," ","|"," "," "," "," "," ","/","'"," "," "," "," "," "," "," "," ","`","\\"," "," "," "," "," ","|"," "},
                { " "," "," "," "," "," "," "," "," "," "," ","\\"," "," "," ","|"," ","."," "," ",".","=","=","."," "," ","."," ","|"," "," "," ","/"," "," "},
                { " "," "," "," "," "," "," "," "," "," "," "," ","'",".","_"," ","\\",".","'"," ","\\","_","_","/"," ","'",".","/"," ","_",".","'"," "," "," "},
                { " "," "," "," "," "," "," ","j","g","s"," "," ","/"," "," ","`","`","'",".","_","-","'","'","-","_",".","'","`","`"," "," ","\\"," "," "," "},
                { " "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","`","-","-","`"," "," "," "," "," "," "," "," "," "," "," "}


            };
            this.name = name;
            this.schematic = bearSchematic;
            maxHealthPoints = 80;
            CurrentHealthPoints = maxHealthPoints;
            Strength = 15;
            Armor = 20;
            Agility = 2;
            expAward = 37;
            coinReward = 40;
            initiative = 1;
        }

        public Bear(string name, double modifier)
        {


            string[,] bearSchematic =
            {
                { " "," "," "," "," "," "," "," "," "," "," ",".","-","-","."," "," "," "," "," "," "," "," "," "," "," "," "," "," ",".","-","-","."," "," " },
                {" "," "," "," "," "," "," "," "," "," ",":"," ","(","\\"," ","\"","."," ","_",".",".",".",".",".",".","_"," ",".","\""," ","/",")"," ",":"," "},
                {" "," "," "," "," "," "," "," "," "," "," ","'","."," "," "," "," ","`"," "," "," "," "," "," "," "," ","`"," "," "," "," ",".","'"," "," "},
                { " "," "," "," "," "," "," "," "," "," "," "," ","/","'"," "," "," ","_"," "," "," "," "," "," "," "," ","_"," "," "," ","`","\\"," "," "," "},
                { " "," "," "," "," "," "," "," "," "," "," ","/"," "," "," "," "," ","0","}"," "," "," "," "," "," ","{","0"," "," "," "," "," ","\\"," "," "},
                { " "," "," "," "," "," "," "," "," "," ","|"," "," "," "," "," "," "," ","/"," "," "," "," "," "," ","\\"," "," "," "," "," "," "," ","|"," "},
                { " "," "," "," "," "," "," "," "," "," ","|"," "," "," "," "," ","/","'"," "," "," "," "," "," "," "," ","`","\\"," "," "," "," "," ","|"," "},
                { " "," "," "," "," "," "," "," "," "," "," ","\\"," "," "," ","|"," ","."," "," ",".","=","=","."," "," ","."," ","|"," "," "," ","/"," "," "},
                { " "," "," "," "," "," "," "," "," "," "," "," ","'",".","_"," ","\\",".","'"," ","\\","_","_","/"," ","'",".","/"," ","_",".","'"," "," "," "},
                { " "," "," "," "," "," "," ","j","g","s"," "," ","/"," "," ","`","`","'",".","_","-","'","'","-","_",".","'","`","`"," "," ","\\"," "," "," "},
                { " "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","`","-","-","`"," "," "," "," "," "," "," "," "," "," "," "}


            };
            this.name = name;
            this.schematic = bearSchematic;
            maxHealthPoints = 80 * modifier;
            CurrentHealthPoints = maxHealthPoints;
            Strength = 15 * modifier;
            Armor = 20 * modifier;
            Agility = 2 * modifier;
            expAward = 40 * modifier;
            coinReward = 40 * modifier;
            initiative = 1;
        }

        public override string SpecialAtk(Player player)
        {
            if (!player.isDotted)
            {
                player.dot = 10;
                player.roundNumRemove = roundNum + 3;
                player.isDotted = true;
                return $"{name} inflicts a nasty wound on {player.name}! Its bleeding badly!";
            }
            else
            {
                return Attack(player);
            }
        }

        public override string RemoveBuffs()
        {
            if (debuffed)
            {
                if (roundNum == roundNumRemove)
                {
                    Strength += negStrength;
                    negStrength = 0;
                    Agility += negAgility;
                    negAgility = 0;
                    debuffed = false;
                    roundNumRemove = 0;
                    return $"{name} is no longer debuffed";
                }
            }
            if (isDotted)
            {
                if (roundNum == roundNumRemove)
                {
                    dot = 0;
                    isDotted = false;
                    return $"{name} is no longer suffering periodic damage.";
                }
                else
                {
                    CurrentHealthPoints -= dot;
                    return $"{name} suffers {dot} damage!";
                }
            }
            else
            {
                return "";
            }
        }
    }
}
