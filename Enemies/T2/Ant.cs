using System;
using System.Collections.Generic;
using System.Text;

namespace Game
{
    class Ant: Enemy
    {

        public Ant(string name)
        {

        
        string[,] antSchematic =
        {
            { " ","\\"," "," "," "," "," "," "," ","/"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
            { " "," ","\\"," "," "," "," "," ","/"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
            { " "," "," ","\\",".","-",".","/"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
            {" "," ","(","o","\\","^","/","o",")"," "," ","_"," "," "," ","_"," "," "," ","_"," "," "," "," "," ","_","_"," "," "," "," "," "," "," ",},
            {" "," "," ",".","/"," ","\\",".","\\"," ","("," ",")","-","("," ",")","-","("," ",")"," ",".","-","'"," "," ","'","-","."," "," "," "," ",},
            {" "," "," "," ","{","-","}"," ","\\","(","/","/"," "," ","|","|"," "," "," ","\\","\\","/"," ","("," "," "," ",")",")"," ","'","-","."," ",},
            {" "," "," "," "," "," "," "," "," ","/","/","-","_","_","|","|","_","_",".","-","\\","\\","."," "," "," "," "," "," "," ",".","-","'"," ",},
            {" "," "," "," "," "," "," "," ","(","/"," "," "," "," ","(",")"," "," "," "," "," ","\\",")","'","-",".","_",".","-","'"," "," "," "," ",},
            {" "," "," "," "," "," "," "," ","|","|"," "," "," "," ","|","|"," "," "," "," "," "," ","\\","\\"," "," "," "," "," "," "," "," "," "," ",},
            {"M","J","P"," "," "," "," "," ","(","'"," "," "," "," ","(","'"," "," "," "," "," "," "," ","'",")"," "," "," "," "," "," "," "," "," ",}
        };
            this.name = name;
            this.schematic = antSchematic;
            maxHealthPoints = 50;
            CurrentHealthPoints = maxHealthPoints;
            Strength = 25;
            Armor = 1;
            Agility = 5;
            expAward = 30;
            coinReward = 35;
            initiative = 1;

        }

        public Ant(string name, double modifier)
        {


            string[,] antSchematic =
            {
            { " ","\\"," "," "," "," "," "," "," ","/"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
            { " "," ","\\"," "," "," "," "," ","/"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
            { " "," "," ","\\",".","-",".","/"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",},
            {" "," ","(","o","\\","^","/","o",")"," "," ","_"," "," "," ","_"," "," "," ","_"," "," "," "," "," ","_","_"," "," "," "," "," "," "," ",},
            {" "," "," ",".","/"," ","\\",".","\\"," ","("," ",")","-","("," ",")","-","("," ",")"," ",".","-","'"," "," ","'","-","."," "," "," "," ",},
            {" "," "," "," ","{","-","}"," ","\\","(","/","/"," "," ","|","|"," "," "," ","\\","\\","/"," ","("," "," "," ",")",")"," ","'","-","."," ",},
            {" "," "," "," "," "," "," "," "," ","/","/","-","_","_","|","|","_","_",".","-","\\","\\","."," "," "," "," "," "," "," ",".","-","'"," ",},
            {" "," "," "," "," "," "," "," ","(","/"," "," "," "," ","(",")"," "," "," "," "," ","\\",")","'","-",".","_",".","-","'"," "," "," "," ",},
            {" "," "," "," "," "," "," "," ","|","|"," "," "," "," ","|","|"," "," "," "," "," "," ","\\","\\"," "," "," "," "," "," "," "," "," "," ",},
            {"M","J","P"," "," "," "," "," ","(","'"," "," "," "," ","(","'"," "," "," "," "," "," "," ","'",")"," "," "," "," "," "," "," "," "," ",}
        };
            this.name = name;
            this.schematic = antSchematic;
            maxHealthPoints = 55 * modifier;
            CurrentHealthPoints = maxHealthPoints;
            Strength = 25 * modifier;
            Armor = 1 * modifier;
            Agility = 5 * modifier;
            expAward = 30 * modifier;
            coinReward = 35 * modifier;
            initiative = 1;

        }

        public override string SpecialAtk(Player player)
        {
            if (roundNum % 2 == 0)
            {
                Fight.LoadUserInterfaceInBattle(Attack(player));
                Fight.LoadUserInterfaceInBattle(Attack(player));
                return $"{name} sneaks up on {player.name} and attacks twice!";
            }
            else
            {
                return Attack(player);
            }

            
        }

        public override string RemoveBuffs()
        {
            if (debuffed)
            {
                if (roundNum == roundNumRemove)
                {
                    Strength += negStrength;
                    negStrength = 0;
                    Agility += negAgility;
                    negAgility = 0;
                    debuffed = false;
                    roundNumRemove = 0;
                    return $"{name} is no longer debuffed";
                }
            }
            if (isDotted)
            {
                if (roundNum == roundNumRemove)
                {
                    dot = 0;
                    isDotted = false;
                    return $"{name} is no longer suffering periodic damage.";
                }
                else
                {
                    CurrentHealthPoints -= dot;
                    return $"{name} suffers {dot} damage!";
                }
            }
            else
            {
                return "";
            }
        }

    }
}

