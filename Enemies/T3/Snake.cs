using System;
using System.Collections.Generic;
using System.Text;

namespace Game
{
    class Snake : Enemy
    {
        public Snake(string name)
        {


            string[,] snakeSchematic =
            {
                { " "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","_",".","-","-",".",".",".","."," "," "," " },
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","_",".",".",".",".","-","-","-",";",":","'",":",":","'"," ","*","_","_","/"," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",".","'"," ","`","'","`","_","_","_",".",".",".",".","-","-","-","=","-","'","`"," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," ","/",":",":","'"," ","(","`"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," ","\\","'"," "," "," ","`",":","."," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","`","\\",":",":","."," "," ","'",";","-","\"","\"",":",":",":","-",".","_"," "," ","{","}"," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," ","_",".","-","-","'","`","\\",":","'"," ",".","'","`","-",".","`","'","`",".","'"," ","`","{","I","}"," "," "},
                { " "," "," "," "," "," "," "," "," ",".","-","'"," ","`","'"," ",".",";",";","`","\\",":",":","."," "," "," ","'","."," ","_",":"," ","{","-","I","}","`","\\"},
                { " "," "," "," "," "," "," ",".","'"," "," ",".",":","."," "," ","`",":",":"," ","_",")",":",":",":"," "," ","_",";","'"," ","`","{","=","I","}",".",":","|"},
                { " "," "," "," "," "," ","/","."," "," ",":",":",":",":","`","\"",":",":",":","`"," ","'",":","'",".","-","'","`","'",":","."," ","{","_","I","}",":",":","/ "},
                { " "," "," "," "," "," ","|",":","."," ","'",":","'"," "," ",":",":",":",":",":"," "," ",".","'",":","'","`",":","."," ","`","'","|","'",":","|",":","'"," "},
                { " "," "," "," "," "," "," ","\\",":"," "," "," ",".",":","."," ","'","'","'"," ",".",":","|"," ",".",":",","," ","_",":",".","/","'",":",".","|"," "," "," "},
                { " "," "," "," ","j","g","s"," ","'","-","-",".",":",":",":",".",".",".","-","-","-","'","\\",":","'",".",":","`","'",":","`","'",":",".","/"," "," "," "," "},
                { " "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","'","-",":",":",".",".",":",":",":","-","'"," "," "," "," "," "}
            };
            this.name = name;
            this.schematic = snakeSchematic;
            maxHealthPoints = 150;
            CurrentHealthPoints = maxHealthPoints;
            Strength = 9;
            Armor = 20;
            Agility = 30;
            expAward = 95;
            coinReward = 85;
            initiative = 5;
        }

        public Snake(string name, double modifier)
        {


            string[,] snakeSchematic =
            {
                { " "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","_",".","-","-",".",".",".","."," "," "," " },
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","_",".",".",".",".","-","-","-",";",":","'",":",":","'"," ","*","_","_","/"," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," ",".","'"," ","`","'","`","_","_","_",".",".",".",".","-","-","-","=","-","'","`"," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," ","/",":",":","'"," ","(","`"," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," ","\\","'"," "," "," ","`",":","."," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","`","\\",":",":","."," "," ","'",";","-","\"","\"",":",":",":","-",".","_"," "," ","{","}"," "," "},
                {" "," "," "," "," "," "," "," "," "," "," "," ","_",".","-","-","'","`","\\",":","'"," ",".","'","`","-",".","`","'","`",".","'"," ","`","{","I","}"," "," "},
                { " "," "," "," "," "," "," "," "," ",".","-","'"," ","`","'"," ",".",";",";","`","\\",":",":","."," "," "," ","'","."," ","_",":"," ","{","-","I","}","`","\\"},
                { " "," "," "," "," "," "," ",".","'"," "," ",".",":","."," "," ","`",":",":"," ","_",")",":",":",":"," "," ","_",";","'"," ","`","{","=","I","}",".",":","|"},
                { " "," "," "," "," "," ","/","."," "," ",":",":",":",":","`","\"",":",":",":","`"," ","'",":","'",".","-","'","`","'",":","."," ","{","_","I","}",":",":","/ "},
                { " "," "," "," "," "," ","|",":","."," ","'",":","'"," "," ",":",":",":",":",":"," "," ",".","'",":","'","`",":","."," ","`","'","|","'",":","|",":","'"," "},
                { " "," "," "," "," "," "," ","\\",":"," "," "," ",".",":","."," ","'","'","'"," ",".",":","|"," ",".",":",","," ","_",":",".","/","'",":",".","|"," "," "," "},
                { " "," "," "," ","j","g","s"," ","'","-","-",".",":",":",":",".",".",".","-","-","-","'","\\",":","'",".",":","`","'",":","`","'",":",".","/"," "," "," "," "},
                { " "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," ","'","-",":",":",".",".",":",":",":","-","'"," "," "," "," "," "}
            };
            this.name = name;
            this.schematic = snakeSchematic;
            maxHealthPoints = 150 * modifier;
            CurrentHealthPoints = maxHealthPoints;
            Strength = 9 * modifier;
            Armor = 20 * modifier;
            Agility = 30 * modifier;
            expAward = 95 * modifier;
            coinReward = 85 * modifier;
            initiative = 5;
        }

        public override string SpecialAtk(Player player)
        {
            if (!player.isDotted)
            {
                Attack(player);
                System.Threading.Thread.Sleep(1000);
                Attack(player);
                System.Threading.Thread.Sleep(1000);
                player.isDotted = true;
                player.dot = Strength;
                player.roundNumRemove = roundNum + 2;
            }
            return $"{name} stabs {player.name} quickly with its large fangs. {player.name} is poisoned.";
        }

        public override string RemoveBuffs()
        {
            if (debuffed)
            {
                if (roundNum == roundNumRemove)
                {
                    Strength += negStrength;
                    negStrength = 0;
                    Agility += negAgility;
                    negAgility = 0;
                    debuffed = false;
                    roundNumRemove = 0;
                    return $"{name} is no longer debuffed";
                }
                
            }
            if (isDotted)
            {
                if (roundNum == roundNumRemove)
                {
                    dot = 0;
                    isDotted = false;
                    return $"{name} is no longer suffering periodic damage.";
                }
                else
                {
                    CurrentHealthPoints -= dot;
                    return $"{name} suffers {dot} damage!";
                }
            }
            else
            {
                return "Zzzzzzzz...";
            }
        }
    }
}
